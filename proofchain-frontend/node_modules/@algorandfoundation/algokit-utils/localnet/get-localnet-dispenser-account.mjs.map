{"version":3,"file":"get-localnet-dispenser-account.mjs","sources":["../../src/localnet/get-localnet-dispenser-account.ts"],"sourcesContent":["import algosdk from 'algosdk'\nimport { AccountManager } from '../types/account-manager'\nimport { ClientManager } from '../types/client-manager'\nimport Account = algosdk.Account\nimport Algodv2 = algosdk.Algodv2\nimport Kmd = algosdk.Kmd\n/**\n * @deprecated Use `algorand.account.kmd.getLocalNetDispenserAccount()` instead.\n *\n * Returns an Algorand account with private key loaded for the default LocalNet dispenser account (that can be used to fund other accounts)\n *\n * @param algod An algod client\n * @param kmd A KMD client, if not specified then a default KMD client will be loaded from environment variables\n */\nexport async function getLocalNetDispenserAccount(algod: Algodv2, kmd?: Kmd): Promise<Account> {\n  return (await new AccountManager(new ClientManager({ algod, kmd })).kmd.getLocalNetDispenserAccount()).account\n}\n"],"names":[],"mappings":";;;AAMA;;;;;;;AAOG;AACI,eAAe,2BAA2B,CAAC,KAAc,EAAE,GAAS,EAAA;IACzE,OAAO,CAAC,MAAM,IAAI,cAAc,CAAC,IAAI,aAAa,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,2BAA2B,EAAE,EAAE,OAAO;AAChH;;;;"}